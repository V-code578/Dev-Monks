Updated Login.jsx

import { useState, useEffect } from 'react';
import { useNavigate, Link } from "react-router-dom";

function Login(props) {
    const [email, setEmail] = useState({ Email: "", error: "" });
    const [password, setPassword] = useState({ Password: "", error: "" });
    const [role, setRole] = useState({ Role: "", error: "" });
    const [authenticationError, setError] = useState("");
    const [users, setUsers] = useState({});
    const navigate = useNavigate();

    const handleEmailChange = (event) => {
        const value = event.target.value;
        if (value == "") {
            setEmail({ Email: "", error: "Email is Required" })
        } else {
            setEmail({ Email: value, error: "" })
        }
    }

    const handlePasswordChange = (event) => {
        const value = event.target.value;
        if (value == "") {
            setPassword({ Password: "", error: "Password is Required" })
        } else {
            setPassword({ Password: value, error: "" })
        }
    }

    const handleRole = (event) => {
        const value = event.target.value;
        if (value === "") {
            setRole({ Role: "", error: "Role is Required" });
        } else {
            setRole((prevState) => ({ ...prevState, Role: value, error: "" }));
        }
    }

    async function handleLogin() {

        if (!email || !password || !role) {
            setError('All fields are required');
            return;
        }


        const user = {
            UserName: email.Email,
            Password: password.Password,
            Role: email.Email === "vishwa@gmail.com" ? "A" : "U" // Set the role value based on the email
        }

        await fetch("https://localhost:7186/api/User/Login/", {
            method: "post",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json"
            },
            body: JSON.stringify(user),
        })
            .then((response) => {
                if (response.status === 400) {
                    throw new Error();
                }
                if (response.status === 404) {
                    setError("Invalid Username Or Password ");
                    throw new Error();
                }
                if (response.status === 401) {
                    alert("Invalid Username Or Password");
                    throw new Error();
                }

                return response.json();
            })
            .then((result) => {
                console.log(result);
                props.setUserName(result.userName);
                props.setRole(result.role); // Set the role value from the response
                localStorage.setItem('user', JSON.stringify(result));
            })
            .then(() => {
                props.setLoggedIn(true);
                navigate('/');
            });
    }

    return (
        <div className='container'>
            <div className='w-50 mt-5 mx-auto'>
                <h2>LOGIN</h2>
                {/*<div className='text-danger'>*/}
                {/*    <p className="text-danger">Fields marked with * are mandatory</p>*/}
                {/*    {email.error !== "" && <li>{email.error}</li>}*/}
                {/*    {password.error !== "" && <li>{password.error}</li>}*/}
                {/*    {authenticationError !== "" && <li>{authenticationError}</li>}*/}
                {/*</div>*/}
                <div className='form-group mt-2'>
                    <p>Email Address<span className="text-danger"></span></p>
                    <input className='form-control' type="email" value={email.Email} name='Email' onChange={handleEmailChange} required />
                </div>
                <div className='form-group mt-2'>
                    <p>Password<span className="text-danger"></span></p>
                    <input className='form-control' type="password" value={password.Password} name='Password' onChange={handlePasswordChange} required />
                </div>

                <div className='mt-2'>
                    <button className='btn btn-primary' onClick={handleLogin}>Login</button>
                </div>

                <p className="mt-2">
                    <Link to="/ForgotPass">Forgot Password?</Link>
                </p>
            </div>
        </div>
    );
}

export default Login;
----------------------------------------------------------------------------------------------------------------------------------------------------------------

updated Register.jsx

import React, { useState } from 'react';
import { Link } from 'react-router-dom';

function Register() {
    const [username, setUsername] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [role, setRole] = useState('');
    const [registrationError, setRegistrationError] = useState('');

    const handleUsernameChange = (event) => {
        setUsername(event.target.value);
    };

    const handlePasswordChange = (event) => {
        setPassword(event.target.value);
    };

    const handleConfirmPasswordChange = (event) => {
        setConfirmPassword(event.target.value);
    };

    const handleRoleChange = (event) => {
        setRole(event.target.value);
    };

    const handleRegister = async () => {
        // Validation logic
        const emailRegex = /^[A-Za-z0-9._%+-]+@[a-z]+\.[a-z]{2,}$/;

        if (username === "") {
            setRegistrationError('Username is required');
            return;
        }
        if (!emailRegex.test(username)) {
            setRegistrationError('Invalid Email Format (Should be, for example: example@gmail.com)');
            return;
        }
        if (password === "") {
            setRegistrationError('Password is required');
            return;
        }
        if (password.length < 8) {
            setRegistrationError('Password should be a minimum of 8 characters');
            return;
        }

        if (!username || !password || !confirmPassword) {
            setRegistrationError('All fields are required');
            return;
        }

        if (password !== confirmPassword) {
            setRegistrationError('Password and Confirm Password must match');
            return;
        }

        // Call the registration API
        try {
            const user = {
                UserName: username,
                Password: password,
                Role: "U" // Set the role value to "U" for all registered users
            };

            console.log('Registration data:', user);

            const response = await fetch('https://localhost:7186/api/User/', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(user)
            });

            console.log('Registration response:', response);

            if (response.status === 201) {
                alert('Registration successful!');
            } else {
                throw new Error(`Registration failed with status ${response.status}`);
            }
        } catch (error) {
            console.error('Registration error:', error);
            setRegistrationError('Registration failed. Please try again later.');
        }
    };

    return (
        <div className="container">
            <div className="w-50 mt-5 mx-auto">
                <h2>Register</h2>

                <div className="form-group mt-2">
                    <p>Username<span className="text-danger"></span></p>
                    <input
                        className="form-control"
                        type="text"
                        value={username}
                        name="Username"
                        onChange={handleUsernameChange}
                        required
                    />
                </div>
                <div className="form-group mt-2">
                    <p>Password<span className="text-danger"></span></p>
                    <input
                        className="form-control"
                        type="password"
                        value={password}
                        name="Password"
                        onChange={handlePasswordChange}
                        required
                    />
                </div>
                <div className="form-group mt-2">
                    <p>Confirm Password<span className="text-danger"></span></p>
                    <input
                        className="form-control"
                        type="password"
                        value={confirmPassword}
                        name="ConfirmPassword"
                        onChange={handleConfirmPasswordChange}
                        required
                    />
                </div>
                
                <div className="mt-2">
                    <button className="btn btn-primary" onClick={handleRegister}>Register</button>
                </div>
                <p className="mt-2">
                    Already have an account? <Link to="/Login">Login here</Link>
                </p>
            </div>
        </div>
    );
}

export default Register;
