App.jsx:
import React, { useState } from "react";
import { BrowserRouter as Router, Route, Routes, Navigate } from "react-router-dom";
import RegisterPage from "./RegisterPage";
import LoginPage from "./LoginPage";
import ForgotPasswordPage from "./ForgotPasswordPage";
import Home from "./Home";
import NavbarBefore from "./NavbarBefore";
import NavbarAfterAdmin from "./NavbarAfterAdmin";
import NavbarAfter from "./NavbarAfter";

const App = () => {
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const [isAdmin, setIsAdmin] = useState(false);

    const handleLogout = () => {
        setIsLoggedIn(false);
        setIsAdmin(false);
        sessionStorage.removeItem("isAdmin");
        return <Navigate to="/" />;
    };

    return (
        <Router>
            {isLoggedIn && isAdmin ? (
                <NavbarAfterAdmin userName="Admin" setLoggedIn={handleLogout} />
            ) : isLoggedIn ? (
                <NavbarAfter userName="User" setLoggedIn={handleLogout} />
            ) : (
                <NavbarBefore setLoggedIn={setIsLoggedIn} />
            )}

            <Routes>
                <Route path="/register" element={<RegisterPage />} />
                <Route path="/login" element={<LoginPage setLoggedIn={setIsLoggedIn} setIsAdmin={setIsAdmin} />} />
                <Route path="/forgot-password" element={<ForgotPasswordPage />} />
                <Route path="/" element={<Home />} />
            </Routes>
        </Router>
    );
};

export default App;

LoginPage.jsx:

import React, { useState } from "react";
import { Form, FormGroup, Label, Input, Button } from "reactstrap";
import { useNavigate } from "react-router-dom";

const LoginPage = ({ setLoggedIn, setIsAdmin }) => {
    const [username, setUsername] = useState("");
    const [password, setPassword] = useState("");
    const [message, setMessage] = useState("");
    const navigate = useNavigate();

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            const response = await fetch("http://localhost:5183/api/user/Login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ UserName: username, Password: password }),
            });

            if (!response.ok) {
                throw new Error("Invalid credentials");
            }

            const data = await response.json();
            setMessage(data.message);

            sessionStorage.setItem("isAdmin", data.isAdmin);
            setIsAdmin(data.isAdmin);
            setLoggedIn(true);

            navigate("/");
        } catch (error) {
            setMessage(error.message);
        }
    };

    return (
        <div className="container">
            <div className="row">
                <div className="col-md-6 offset-md-3">
                    <Form onSubmit={handleSubmit}>
                        <FormGroup>
                            <Label for="username">Username</Label>
                            <Input
                                type="text"
                                name="username"
                                id="username"
                                value={username}
                                onChange={(e) => setUsername(e.target.value)}
                                required
                            />
                        </FormGroup>
                        <FormGroup>
                            <Label for="password">Password</Label>
                            <Input
                                type="password"
                                name="password"
                                id="password"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                required
                            />
                        </FormGroup>
                        <Button color="primary" type="submit">
                            Login
                        </Button>
                        {message && <p style={{ color: "green" }}>{message}</p>}
                    </Form>
                </div>
            </div>
        </div>
    );
};

export default LoginPage;
